#!/usr/bin/env python3
import json

import os
import sys
import urllib.request
import zipfile

__author__ = 'kristoffer'

download_dir = "/download"


def _read_versions(path):
    with open(path + '/src/versions.json', 'r') as file:
        return json.load(file)


def _read_manifest(path, platform, versions):
    with open(path + '/src/manifest_template.json', 'r') as file:
        if __name__ == '__main__':
            json_data = file.read().\
                replace('{{platform}}', platform).\
                replace('{{release-version}}', versions['crazyflie-release']).\
                replace('{{stm-version}}', versions['crazyflie-firmware']).\
                replace('{{nrf-version}}', versions['crazyflie2-nrf-firmware'])

            return json.loads(json_data)


def _download(path, manifest):
    for file_name, file_def in manifest['files'].items():
        url = 'https://github.com/bitcraze/' + file_def[
            'repository'] + '/releases/download/' + file_def[
            'release'] + '/' + file_name
        dest = path + download_dir + "/" + file_name

        print("Downloading " + url)
        urllib.request.urlretrieve(url, dest)


def _create_zip(path, manifest, platform):
    zip_name = \
        path + '/firmware-' + platform + '-' + manifest['release'] + '.zip'
    zf = zipfile.ZipFile(zip_name, mode='w')
    zf.writestr('manifest.json', json.dumps(manifest))
    for file_name in manifest['files']:
        zf.write(path + download_dir + "/" + file_name, arcname=file_name)
    zf.close()
    print("Created " + zip_name)


def _parse_args(argv):
    if len(argv) != 2:
        print("ERROR: Target platform missing")
        exit(-1)

    return argv[1]


def _main(argv):
    root_dir = os.path.dirname(os.path.realpath(__file__)) + "/../.."
    platform = _parse_args(argv)
    versions = _read_versions(root_dir)
    print("Building release for platform: " + platform)

    manifest = _read_manifest(root_dir, platform, versions)
    _download(root_dir, manifest)
    _create_zip(root_dir, manifest, platform)


_main(sys.argv)
